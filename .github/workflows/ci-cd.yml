name: CI/CD Pipeline

permissions:
  contents: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*' 
  pull_request: 

jobs:
  integration:
    name: Integration (CI)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run test
      - run: npm run build --if-present
      - name: Upload Build Artifact
        if: ${{ matrix.node-version == '22.x' }}
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: dist

  delivery:
    name: Continuous Delivery
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: integration
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: dist
      - name: List downloaded files
        run: ls -R dist
      - name: Archive Delivery Artifact
        run: zip -r delivery.zip dist
      - name: Upload Delivery Artifact
        uses: actions/upload-artifact@v4
        with:
          name: delivery-artifact
          path: delivery.zip

  deployment:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: integration
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: Configure Git Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      - run: npm ci
      - run: npm run build
      - run: npm run deploy
    env:
      GH_TOKEN: ${{ secrets.GH_PAGES_TOKEN }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: deployment
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false